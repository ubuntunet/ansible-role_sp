---
# II Configuration
# https://www.switch.ch/aai/guides/sp/configuration/

# Signing Certificates
############ If Certificates exist? ##################################

- name: Check if there is a signing certificate locally
  become: no
  local_action:
    module: stat
    path: "roles/shibboleth/files/{{ fqdn | default('default_fqdn') }}_sp-cert.pem"
  register: have_sign_cert
  tags: shibboleth_sp

- name: Check if there is a signing key locally
  become: no
  local_action:
    module: stat
    path: "roles/shibboleth/files/{{ fqdn | default('default_fqdn') }}_sp-key.pem"
  register: have_sign_key
  tags: shibboleth_sp


################## Then < Copy existing certificates to remote #######################
- name: Copy signing key
  become: yes
  copy:
    src: "{{ fqdn | default('default_fqdn') }}_sp-key.pem"
    dest: /etc/shibboleth/sp-key.pem
  when: (have_sign_cert.stat.exists == True) and (have_sign_key.stat.exists == True)
  tags: shibboleth_sp

- name: Copy signing certificate
  become: yes
  copy:
    src: "{{ fqdn | default('default_fqdn') }}_sp-cert.pem"
    dest: /etc/shibboleth/sp-cert.pem
  when: (have_sign_cert.stat.exists == True) and (have_sign_key.stat.exists == True)
  tags: shibboleth_sp

############ Else > Create self-signed certificates ##################################

# 4. X.509 certificate for SAML message signing/encrypting
- name: Create self-signed certificate
  become: yes
  command: shib-keygen -f -u _shibd -h {{ fqdn | default('default_fqdn') }} -y 3 -e https://{{ fqdn | default('default_fqdn') }}/shibboleth -o /etc/shibboleth/
  args:
    creates: /etc/shibboleth/sp-key.pem
  when: (have_sign_cert.stat.exists == False) and (have_sign_key.stat.exists == False)
  tags: shibboleth_sp

- name: Copy signing cert to this machine, if it exists
  become: yes
  fetch:
    src: /etc/shibboleth/sp-cert.pem 
    dest: "roles/shibboleth/files/{{ fqdn | default('default_fqdn') }}_sp-cert.pem"
    flat: yes
  when: (have_sign_cert.stat.exists == False) and (have_sign_key.stat.exists == False)
  tags: shibboleth_sp

- name: Copy signing key to this machine, if it exists
  become: yes
  fetch:
    src: /etc/shibboleth/sp-key.pem 
    dest: "roles/shibboleth/files/{{ fqdn | default('default_fqdn') }}_sp-key.pem"
    flat: yes
  when: (have_sign_cert.stat.exists == False) and (have_sign_key.stat.exists == False)
  tags: shibboleth_sp

- name: Copy Logo
  become: yes
  copy:
    src: "{{ sp.logo | default('logo-default.png')}}"
    dest: "/etc/shibboleth/{{ sp.logo }}"
  tags: shibboleth_sp


# 5. Shibboleth Configuration
- name: Copy Shibboleth config file
  become: yes
  template:
    src: shibboleth2.xml.j2
    dest: /etc/shibboleth/shibboleth2.xml
  notify: restart shibboleth
  tags: shibboleth_sp

- name: Copy attribute-map file
  become: yes
  template:
    src: attribute-map.xml.j2
    dest: /etc/shibboleth/attribute-map.xml
  notify: restart shibboleth
  tags: shibboleth_sp

- name: Copy attribute-policy file
  become: yes
  template:
    src: attribute-policy.xml.j2
    dest: /etc/shibboleth/attribute-policy.xml
  notify: restart shibboleth
  tags: shibboleth_sp

- name: Copy Federation Metadata signer certificate
  become: yes
  copy:
    src: "{{ fedsigner_cert }}"
    dest: "/etc/shibboleth/{{ fedsigner_cert }}"
  notify: restart shibboleth
  tags: shibboleth_sp

- name: Download Metadata Backup File from RR 
  become: yes
  get_url:
    url: "{{ metadata_url }}"
    dest: "/etc/shibboleth/{{ metadata_file }}"
  notify: restart shibboleth
  tags: shibboleth_sp

- name: Hand /etc/shibboleth over to the _shibd user
  become: yes
  file:
    path: /etc/shibboleth
    owner: _shibd
    recurse: yes 
  tags: shibboleth_sp

